{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","evt","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","filter","onfilterSelect","map","activeClass","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","onToggleProperty","elements","post","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","slice","body","newItem","property","old","items","length","item","toLowerCase","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24d53606.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Dmitry Kozlov</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked} записей</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        };\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n\r\n    onUpdateSearch(evt) {\r\n        const term = evt.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n};","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const {filter, onfilterSelect} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = filter === name;\r\n            const activeClass = active ? 'btn-info' : 'btn-outline-secondary'\r\n\r\n            return (\r\n                <button\r\n                    key={name}\r\n                    type=\"button\"\r\n                    className={`btn ${activeClass}`}\r\n                    onClick={() => onfilterSelect(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n};","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nconst PostListItem = ({label, onDelete, onToggleImportant, onToggleLiked, important, like}) => {\r\n\r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n\r\n    if (like) {\r\n        classNames += ' like';\r\n    }\r\n\r\n    return (\r\n        <div className={classNames}>\r\n            <span\r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}\r\n            >\r\n                {label}\r\n            </span>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}\r\n                >\r\n                    <i className=\"fa fa-star\" />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}\r\n                >\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n                <i className=\"fa fa-heart\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostListItem;","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\n\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleProperty}) => {\r\n    \r\n    const elements = posts.map(post => {\r\n        const {id, ...itemProps} = post;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem\r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleProperty(id, 'important')}\r\n                    onToggleLiked={() => onToggleProperty(id, 'like')}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(evt) {\r\n        this.setState({\r\n            text: evt.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем Вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >\r\n                    Добавить\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n};","import App from './app';\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'That is so good', important: false, like: false, id: 2},\r\n                {label: 'I need a break...', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.onToggleProperty = this.onToggleProperty.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onfilterSelect = this.onfilterSelect.bind(this);\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        };\r\n\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n               \r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleProperty(id, property) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const old = data[index];\r\n            const newItem = {...old};\r\n\r\n            newItem[property] = !old[property];\r\n            \r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter(item => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term});\r\n    }\r\n\r\n    onfilterSelect(filter) {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onfilterSelect={this.onfilterSelect}\r\n                    />\r\n                </div>\r\n                <PostList\r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleProperty={this.onToggleProperty}\r\n                />\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}